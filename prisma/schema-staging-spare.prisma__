// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id           Int      @id @default(autoincrement())
  title        String
  handle       String?
  body_html    String?
  vendor       String?
  product_type String?
  publishedAt  DateTime @default(now()) @map(name: "published_at")
  updatedAt    DateTime @updatedAt @map(name: "updated_at")
  author       User?    @relation(fields: [authorId], references: [id])
  authorId     Int?
  tags         String[]
  variants     Variant? @relation(fields: [variantId], references: [id])
  variantId    Int
  images       Image?   @relation(fields: [imageId], references: [id])
  imageId      Int
  options      Option?  @relation(fields: [optionId], references: [id])
  optionId     Int

  @@map(name: "products")
}

model Variant {
  id                Int      @id @default(autoincrement())
  title             String
  option1           String?
  option2           String?
  option3           String?
  sku               String?
  requires_shipping String?
  taxable           Boolean
  featured_image    Image?   @relation(fields: [featuredImageId], references: [id])
  featuredImageId   Int
  available         Boolean
  price             String?
  grams             Boolean
  compare_at_price  Int?
  position          Int?
  product_id        Int?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @updatedAt @map(name: "updated_at")

  Product Product[]
  @@map(name: "variants")
}

model Image {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map(name: "created_at")
  position    Int?
  updatedAt   DateTime @updatedAt @map(name: "updated_at")
  product_id  Int?
  variant_ids Int[]
  src         String?
  width       Int?
  height      Int?

  Product Product[]
  Variant Variant[]
  @@map(name: "images")
}

model Option {
  id       Int      @id @default(autoincrement())
  name     String?
  position Int?
  values   String[]

  Product Product[]
  @@map(name: "options")
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  Int?
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  posts         Post[]

  Product Product[]
  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")


  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}
