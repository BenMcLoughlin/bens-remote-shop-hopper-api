{"ast":null,"code":"import { PrismaClient } from '@prisma/client'; // let prisma: PrismaClient;\n// if (process.env.NODE_ENV !== 'production') {\n//   prisma = new PrismaClient();\n// } else {\n//   if (!global.prisma) {\n//     global.prisma = new PrismaClient();\n//   }\n//   prisma = global.prisma;\n// }\n// export default prisma;\n\nconst prisma = new PrismaClient(); // A `main` function so that you can use async/await\n\nasync function main() {\n  const allUsers = await prisma.user.findMany({\n    include: {\n      posts: true\n    }\n  }); // use `console.dir` to print nested objects\n\n  console.dir(allUsers, {\n    depth: null\n  });\n}\n\nmain().catch(e => {\n  throw e;\n}).finally(async () => {\n  await prisma.$disconnect();\n});","map":{"version":3,"sources":["/Users/home/Desktop/fullstack-boilerplate/blogr-nextjs-prisma/lib/prisma.ts"],"names":["PrismaClient","prisma","main","allUsers","user","findMany","include","posts","console","dir","depth","catch","e","finally","$disconnect"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf,C,CAEA;;AACA,eAAeE,IAAf,GAAsB;AACpB,QAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACG,IAAP,CAAYC,QAAZ,CAAqB;AAC1CC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AADiC,GAArB,CAAvB,CADoB,CAIpB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAsB;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAtB;AACD;;AAEDR,IAAI,GACDS,KADH,CACSC,CAAC,IAAI;AACV,QAAMA,CAAN;AACD,CAHH,EAIGC,OAJH,CAIW,YAAY;AACnB,QAAMZ,MAAM,CAACa,WAAP,EAAN;AACD,CANH","sourcesContent":["import { PrismaClient } from '@prisma/client';\n\n// let prisma: PrismaClient;\n\n// if (process.env.NODE_ENV !== 'production') {\n//   prisma = new PrismaClient();\n// } else {\n//   if (!global.prisma) {\n//     global.prisma = new PrismaClient();\n//   }\n//   prisma = global.prisma;\n// }\n\n// export default prisma;\n\nconst prisma = new PrismaClient()\n\n// A `main` function so that you can use async/await\nasync function main() {\n  const allUsers = await prisma.user.findMany({\n    include: { posts: true },\n  })\n  // use `console.dir` to print nested objects\n  console.dir(allUsers, { depth: null })\n}\n\nmain()\n  .catch(e => {\n    throw e\n  })\n  .finally(async () => {\n    await prisma.$disconnect()\n  })"]},"metadata":{},"sourceType":"module"}