{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/fullstack-boilerplate/blogr-nextjs-prisma/pages/index.tsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Post from \"../components/Post\";\nimport prisma from '../lib/prisma'; // export const getStaticProps: GetStaticProps = async () => {\n//   const feed = [\n//     {\n//       id: 1,\n//       title: \"Prisma is the perfect ORM for Next.js\",\n//       content: \"[Prisma](https://github.com/prisma/prisma) and Next.js go _great_ together!\",\n//       published: false,\n//       author: {\n//         name: \"Nikolas Burk\",\n//         email: \"burk@prisma.io\",\n//       },\n//     },\n//   ]\n//   return { props: { feed } }\n// }\n\nexport const getStaticProps = async () => {\n  const feed = await prisma.post.findMany({\n    where: {\n      published: true\n    },\n    include: {\n      author: {\n        select: {\n          name: true\n        }\n      }\n    }\n  });\n  const allUsers = await prisma.user.findMany({\n    include: {\n      posts: true\n    }\n  });\n  console.dir(allUsers, {\n    depth: null\n  });\n  return {\n    props: {\n      feed\n    }\n  };\n};\n\nconst dateStripped = obj => {\n  let newObj = {};\n  Object.keys(obj).forEach(key => {\n    let value = obj[key];\n\n    if (value !== null) {\n      // If array, loop...\n      if (Array.isArray(value)) {\n        value = value.map(item => dateStripped(item));\n      } // ...if property is date/time, stringify/parse...\n      else if (typeof value === 'object' && typeof value.getMonth === 'function') {\n        value = JSON.parse(JSON.stringify(value));\n      } // ...and if a deep object, loop.\n      else if (typeof value === 'object') {\n        value = dateStripped(value);\n      }\n    }\n\n    newObj[key] = value;\n  });\n  return newObj;\n};\n\nconst Blog = props => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-3495282894\" + \" \" + \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Public Feed\"), __jsx(\"main\", {\n    className: \"jsx-3495282894\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, props.feed.map(post => __jsx(\"div\", {\n    key: post.id,\n    className: \"jsx-3495282894\" + \" \" + \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }))))), __jsx(_JSXStyle, {\n    id: \"3495282894\",\n    __self: this\n  }, \".post.jsx-3495282894{background:white;-webkit-transition:box-shadow 0.1s ease-in;transition:box-shadow 0.1s ease-in;}.post.jsx-3495282894:hover{box-shadow:1px 1px 3px #aaa;}.post.jsx-3495282894+.post.jsx-3495282894{margin-top:2rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ob21lL0Rlc2t0b3AvZnVsbHN0YWNrLWJvaWxlcnBsYXRlL2Jsb2dyLW5leHRqcy1wcmlzbWEvcGFnZXMvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlGa0IsQUFHNEIsQUFLVyxBQUlaLGdCQUNsQixDQVRxQyxXQUtyQyxtRUFKQSIsImZpbGUiOiIvVXNlcnMvaG9tZS9EZXNrdG9wL2Z1bGxzdGFjay1ib2lsZXJwbGF0ZS9ibG9nci1uZXh0anMtcHJpc21hL3BhZ2VzL2luZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgR2V0U3RhdGljUHJvcHMgfSBmcm9tIFwibmV4dFwiXG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL0xheW91dFwiXG5pbXBvcnQgUG9zdCwgeyBQb3N0UHJvcHMgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3N0XCJcbmltcG9ydCBwcmlzbWEgZnJvbSAnLi4vbGliL3ByaXNtYSc7XG5cbi8vIGV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wczogR2V0U3RhdGljUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4vLyAgIGNvbnN0IGZlZWQgPSBbXG4vLyAgICAge1xuLy8gICAgICAgaWQ6IDEsXG4vLyAgICAgICB0aXRsZTogXCJQcmlzbWEgaXMgdGhlIHBlcmZlY3QgT1JNIGZvciBOZXh0LmpzXCIsXG4vLyAgICAgICBjb250ZW50OiBcIltQcmlzbWFdKGh0dHBzOi8vZ2l0aHViLmNvbS9wcmlzbWEvcHJpc21hKSBhbmQgTmV4dC5qcyBnbyBfZ3JlYXRfIHRvZ2V0aGVyIVwiLFxuLy8gICAgICAgcHVibGlzaGVkOiBmYWxzZSxcbi8vICAgICAgIGF1dGhvcjoge1xuLy8gICAgICAgICBuYW1lOiBcIk5pa29sYXMgQnVya1wiLFxuLy8gICAgICAgICBlbWFpbDogXCJidXJrQHByaXNtYS5pb1wiLFxuLy8gICAgICAgfSxcbi8vICAgICB9LFxuLy8gICBdXG4vLyAgIHJldHVybiB7IHByb3BzOiB7IGZlZWQgfSB9XG4vLyB9XG5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQcm9wczogR2V0U3RhdGljUHJvcHMgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IGZlZWQgPSBhd2FpdCBwcmlzbWEucG9zdC5maW5kTWFueSh7XG4gICAgd2hlcmU6IHsgcHVibGlzaGVkOiB0cnVlIH0sXG4gICAgaW5jbHVkZToge1xuICAgICAgYXV0aG9yOiB7XG4gICAgICAgIHNlbGVjdDogeyBuYW1lOiB0cnVlIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0pO1xuXG4gIGNvbnN0IGFsbFVzZXJzID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZE1hbnkoe1xuICAgIGluY2x1ZGU6IHsgcG9zdHM6IHRydWUgfSxcbiAgfSlcblxuICBjb25zb2xlLmRpcihhbGxVc2VycywgeyBkZXB0aDogbnVsbCB9KVxuXG4gIHJldHVybiB7IHByb3BzOiB7IGZlZWQgfSB9O1xufTtcblxuY29uc3QgZGF0ZVN0cmlwcGVkID0gb2JqID0+IHtcbiAgbGV0IG5ld09iaiA9IHt9XG4gIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChrZXkgPT4ge1xuICAgIGxldCB2YWx1ZSA9IG9ialtrZXldXG4gICAgaWYgKHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAvLyBJZiBhcnJheSwgbG9vcC4uLlxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUubWFwKGl0ZW0gPT4gZGF0ZVN0cmlwcGVkKGl0ZW0pKVxuICAgICAgfVxuICAgICAgLy8gLi4uaWYgcHJvcGVydHkgaXMgZGF0ZS90aW1lLCBzdHJpbmdpZnkvcGFyc2UuLi5cbiAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbHVlLmdldE1vbnRoID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhbHVlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh2YWx1ZSkpXG4gICAgICB9XG4gICAgICAvLyAuLi5hbmQgaWYgYSBkZWVwIG9iamVjdCwgbG9vcC5cbiAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgdmFsdWUgPSBkYXRlU3RyaXBwZWQodmFsdWUpXG4gICAgICB9XG4gICAgfVxuICAgIG5ld09ialtrZXldID0gdmFsdWVcbiAgfSlcbiAgcmV0dXJuIG5ld09ialxufVxuXG50eXBlIFByb3BzID0ge1xuICBmZWVkOiBQb3N0UHJvcHNbXVxufVxuXG5jb25zdCBCbG9nOiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJwYWdlXCI+XG4gICAgICAgIDxoMT5QdWJsaWMgRmVlZDwvaDE+XG4gICAgICAgIDxtYWluPlxuICAgICAgICAgIHtwcm9wcy5mZWVkLm1hcCgocG9zdCkgPT4gKFxuICAgICAgICAgICAgPGRpdiBrZXk9e3Bvc3QuaWR9IGNsYXNzTmFtZT1cInBvc3RcIj5cbiAgICAgICAgICAgICAgPFBvc3QgcG9zdD17cG9zdH0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkpfVxuICAgICAgICA8L21haW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLnBvc3Qge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMC4xcyBlYXNlLWluO1xuICAgICAgICB9XG5cbiAgICAgICAgLnBvc3Q6aG92ZXIge1xuICAgICAgICAgIGJveC1zaGFkb3c6IDFweCAxcHggM3B4ICNhYWE7XG4gICAgICAgIH1cblxuICAgICAgICAucG9zdCArIC5wb3N0IHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgQmxvZ1xuIl19 */\\n/*@ sourceURL=/Users/home/Desktop/fullstack-boilerplate/blogr-nextjs-prisma/pages/index.tsx */\"));\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/home/Desktop/fullstack-boilerplate/blogr-nextjs-prisma/pages/index.tsx"],"names":["React","Layout","Post","prisma","getStaticProps","feed","post","findMany","where","published","include","author","select","name","allUsers","user","posts","console","dir","depth","props","dateStripped","obj","newObj","Object","keys","forEach","key","value","Array","isArray","map","item","getMonth","JSON","parse","stringify","Blog","id"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { GetStaticProps } from \"next\"\nimport Layout from \"../components/Layout\"\nimport Post, { PostProps } from \"../components/Post\"\nimport prisma from '../lib/prisma';\n\n// export const getStaticProps: GetStaticProps = async () => {\n//   const feed = [\n//     {\n//       id: 1,\n//       title: \"Prisma is the perfect ORM for Next.js\",\n//       content: \"[Prisma](https://github.com/prisma/prisma) and Next.js go _great_ together!\",\n//       published: false,\n//       author: {\n//         name: \"Nikolas Burk\",\n//         email: \"burk@prisma.io\",\n//       },\n//     },\n//   ]\n//   return { props: { feed } }\n// }\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const feed = await prisma.post.findMany({\n    where: { published: true },\n    include: {\n      author: {\n        select: { name: true },\n      },\n    },\n  });\n\n  const allUsers = await prisma.user.findMany({\n    include: { posts: true },\n  })\n\n  console.dir(allUsers, { depth: null })\n\n  return { props: { feed } };\n};\n\nconst dateStripped = obj => {\n  let newObj = {}\n  Object.keys(obj).forEach(key => {\n    let value = obj[key]\n    if (value !== null) {\n      // If array, loop...\n      if (Array.isArray(value)) {\n        value = value.map(item => dateStripped(item))\n      }\n      // ...if property is date/time, stringify/parse...\n      else if (typeof value === 'object' && typeof value.getMonth === 'function') {\n        value = JSON.parse(JSON.stringify(value))\n      }\n      // ...and if a deep object, loop.\n      else if (typeof value === 'object') {\n        value = dateStripped(value)\n      }\n    }\n    newObj[key] = value\n  })\n  return newObj\n}\n\ntype Props = {\n  feed: PostProps[]\n}\n\nconst Blog: React.FC<Props> = (props) => {\n  return (\n    <Layout>\n      <div className=\"page\">\n        <h1>Public Feed</h1>\n        <main>\n          {props.feed.map((post) => (\n            <div key={post.id} className=\"post\">\n              <Post post={post} />\n            </div>\n          ))}\n        </main>\n      </div>\n      <style jsx>{`\n        .post {\n          background: white;\n          transition: box-shadow 0.1s ease-in;\n        }\n\n        .post:hover {\n          box-shadow: 1px 1px 3px #aaa;\n        }\n\n        .post + .post {\n          margin-top: 2rem;\n        }\n      `}</style>\n    </Layout>\n  )\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}